{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/render-tasks.js","../src/js/tasks.js","../src/main.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('#task-list'),\n  taskName: document.querySelector('input[name=\"taskName\"]'),\n  taskDescription: document.querySelector('input[name=\"taskDescription\"]'),\n  markupInsert: document.querySelector('#task-list'),\n};\n","//[{},{},{}]\n\nexport const saveInLS = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getFromLS = key => {\n  const savedData = localStorage.getItem(key);\n  if (savedData) {\n    const parsedData = JSON.parse(savedData);\n    return parsedData;\n  }\n  return null;\n};\n","import { getFromLS } from './local-storage-api';\nimport { refs } from './refs';\n// const infoLS = getFromLS('tasks') || [];\nexport function createMarkup(infoLS) {\n  const myMarkup = infoLS\n    .map(key => {\n      return `\n<li class=\"task-list-item\">\n  <button class=\"task-list-item-btn\">Delete</button>\n  <h3>${key.title}</h3>\n  <p>${key.description}</p>\n</li>\n`;\n    })\n    .join('');\n\n  refs.markupInsert.innerHTML = myMarkup;\n}\n","import { getFromLS, saveInLS } from './local-storage-api';\nimport { refs } from './refs';\nimport { createMarkup } from './render-tasks';\nexport const tasks = getFromLS('tasks') || [];\nexport const addTask = task => {\n  tasks.push(task);\n  saveInLS('tasks', tasks);\n  console.log(tasks);\n  createMarkup(tasks);\n};\n\n// export const deleteTask = () => {};\n","import { refs } from './js/refs';\nimport { addTask } from './js/tasks';\nimport { createMarkup } from './js/render-tasks';\nimport { tasks } from './js/tasks';\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const myTaskName = refs.taskName.value.trim();\n  const myTaskDescription = refs.taskDescription.value.trim();\n\n  if (myTaskName === '' || myTaskDescription === '') {\n    alert('please fill inputs');\n  } else {\n    addTask({ title: myTaskName, description: myTaskDescription });\n    refs.form.reset();\n  }\n});\n// refs.form.elements.taskDescription.value.trim();\ncreateMarkup(tasks);\n\n// const exactButton = document.querySelector(h3.textContext === );\n"],"names":["refs","saveInLS","key","data","getFromLS","savedData","createMarkup","infoLS","myMarkup","tasks","addTask","task","event","myTaskName","myTaskDescription"],"mappings":"ssBAAO,MAAMA,EAAO,CAClB,KAAM,SAAS,cAAc,YAAY,EACzC,KAAM,SAAS,cAAc,YAAY,EACzC,SAAU,SAAS,cAAc,wBAAwB,EACzD,gBAAiB,SAAS,cAAc,+BAA+B,EACvE,aAAc,SAAS,cAAc,YAAY,CACnD,ECJaC,EAAW,CAACC,EAAKC,IAAS,CACrC,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAI,CAAC,CAChD,EAEaC,EAAYF,GAAO,CAC9B,MAAMG,EAAY,aAAa,QAAQH,CAAG,EAC1C,OAAIG,EACiB,KAAK,MAAMA,CAAS,EAGlC,IACT,ECVO,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAAWD,EACd,IAAIL,GACI;AAAA;AAAA;AAAA,QAGLA,EAAI,KAAK;AAAA,OACVA,EAAI,WAAW;AAAA;AAAA,CAGjB,EACA,KAAK,EAAE,EAEVF,EAAK,aAAa,UAAYQ,CAChC,CCdO,MAAMC,EAAQL,EAAU,OAAO,GAAK,GAC9BM,EAAUC,GAAQ,CAC7BF,EAAM,KAAKE,CAAI,EACfV,EAAS,QAASQ,CAAK,EACvB,QAAQ,IAAIA,CAAK,EACjBH,EAAaG,CAAK,CACpB,ECLAT,EAAK,KAAK,iBAAiB,SAAUY,GAAS,CAC5CA,EAAM,eAAc,EACpB,MAAMC,EAAab,EAAK,SAAS,MAAM,KAAI,EACrCc,EAAoBd,EAAK,gBAAgB,MAAM,KAAI,EAErDa,IAAe,IAAMC,IAAsB,GAC7C,MAAM,oBAAoB,GAE1BJ,EAAQ,CAAE,MAAOG,EAAY,YAAaC,CAAmB,CAAA,EAC7Dd,EAAK,KAAK,QAEd,CAAC,EAEDM,EAAaG,CAAK"}