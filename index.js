(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const n={form:document.querySelector("#task-form"),list:document.querySelector("#task-list"),taskName:document.querySelector('input[name="taskName"]'),taskDescription:document.querySelector('input[name="taskDescription"]'),markupInsert:document.querySelector("#task-list")},u=(s,t)=>{localStorage.setItem(s,JSON.stringify(t))},m=s=>{const t=localStorage.getItem(s);return t?JSON.parse(t):null};function l(s){const t=s.map(o=>`
<li class="task-list-item">
  <button class="task-list-item-btn">Delete</button>
  <h3>${o.title}</h3>
  <p>${o.description}</p>
</li>
`).join("");n.markupInsert.innerHTML=t}const i=m("tasks")||[],p=s=>{i.push(s),u("tasks",i),console.log(i),l(i)};n.form.addEventListener("submit",s=>{s.preventDefault();const t=n.taskName.value.trim(),o=n.taskDescription.value.trim();t===""||o===""?alert("please fill inputs"):(p({title:t,description:o}),n.form.reset())});l(i);
//# sourceMappingURL=index.js.map
